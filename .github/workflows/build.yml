name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            platform: mac
            build_script: build:mac
          - os: windows-latest
            platform: win
            build_script: build:win
            
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'  # 锁定与本地相同的版本
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Python (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: npm ci

      - name: Generate icons
        run: npm run generate-icons

      - name: Build application
        run: |
          npx vite build --config vite.config.ci.mjs
          npm run build:electron
        shell: bash

      - name: Package for macOS
        if: matrix.platform == 'mac'
        run: npx electron-builder --mac --x64 --arm64 --publish=never
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          NODE_ENV: production

      - name: Package for Windows
        if: matrix.platform == 'win'
        run: npx electron-builder --win --x64 --arm64 --publish=never
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          NODE_ENV: production

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-packages
          path: |
            release/*.dmg
            release/*.zip
            release/*.exe
            release/*.AppImage
            release/*.deb
            release/*.rpm
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}